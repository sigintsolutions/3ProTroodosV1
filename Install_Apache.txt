How To Install the Apache Web Server on Ubuntu 16.04

Step 1: Install Apache
Apache is available within Ubuntuâ€™s default software repositories, so we will install it using conventional package management tools.

$ sudo apt-get update
$ sudo apt-get install apache2

After confirming the installation, apt-get will install Apache and all required dependencies.

Step 2: Adjust the Firewall
Before we can test Apache, we need to modify our firewall to allow outside access to the default web ports. Assuming that you followed the instructions in the prerequisites, you should have a UFW firewall configured to restrict access to your server.

During installation, Apache registers itself with UFW to provide a few application profiles. We can use these profiles to simplify the process of enabling or disabling access to Apache through our firewall.

We can list the ufw application profiles by typing:

$ sudo ufw app list
You should get a listing of the application profiles:

Output
Available applications:
  Apache
  Apache Full
  Apache Secure
  OpenSSH
As you can see, there are three profiles available for Apache:

Apache: This profile opens only port 80 (normal, unencrypted web traffic)
Apache Full: This profile opens both port 80 (normal, unencrypted web traffic) and port 443 (TLS/SSL encrypted traffic)
Apache Secure: This profile opens only port 443 (TLS/SSL encrypted traffic)
For our purposes, we will allow incoming traffic for the Apache Full profile by typing:

$ sudo ufw allow 'Apache Full'
You can verify the change by typing:

$ sudo ufw status
You should see HTTP traffic allowed in the displayed output:
*******************************************************************
Output
Status: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere                  
Apache Full                ALLOW       Anywhere                  
OpenSSH (v6)               ALLOW       Anywhere (v6)             
Apache Full (v6)           ALLOW       Anywhere (v6)
As you can see, the profile has been activated to allow access to the web server.
*******************************************************************

Step 3: Check your Web Server
At the end of the installation process, Ubuntu 16.04 starts Apache. The web server should already be up and running.

We can check with the systemd init system to make sure the service is running by typing:

$ sudo systemctl status apache2


Step 4: Manage the Apache Process
Now that you have your web server up and running, we can go over some basic management commands.

To stop your web server, you can type:

$ sudo systemctl stop apache2
To start the web server when it is stopped, type:

$ sudo systemctl start apache2
To stop and then start the service again, type:

$ sudo systemctl restart apache2
If you are simply making configuration changes, Apache can often reload without dropping connections. To do this, you can use this command:

$ sudo systemctl reload apache2
By default, Apache is configured to start automatically when the server boots. If this is not what you want, you can disable this behavior by typing:

$ sudo systemctl disable apache2
To re-enable the service to start up at boot, you can type:

$ sudo systemctl enable apache2
Apache should now start automatically when the server boots again.

